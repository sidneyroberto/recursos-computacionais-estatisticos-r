library(readxl)
dados <- read_excel("Banco de dados_multivariada.xlsx")
dados
install.packages("factoextra")
library(factoextra)
row.names(dados) = dados$ID
dados
library(factoextra)
row.names(dados) <- dados$ID
dados
View(dados)
pca <- prcomp(dados[, 4:17],
scale = TRUE)
biplot(pca)
dendrograma <- hclust(dist(pca))
plot(dendrograma)
dendrograma <- hclust(as.list(dist(pca)))
plot(dendrograma)
dendrograma <- hclust(as.list(dist(pca)))
plot(dendrograma)
dendrograma <- hclust(as.double(dist(pca)))
plot(dendrograma)
dendrograma <- hclust(as.double(dist(pca)))
plot(dendrograma)
dendrograma <- hclust(?dist(pca))
plot(dendrograma)
?dist
?hclust
?dist
class(pca)
dendrograma <- hclust(dist(pca))
plot(dendrograma)
dendrograma <- hclust(dist(pca))
plot(dendrograma)
dendrograma <- hclust(dist(as.matrix(pca)))
plot(dendrograma)
resultado <- dist(pca)
dendrograma <- hclust(resultado)
plot(dendrograma)
resultado <- dist(pca)
dendrograma <- hclust(resultado)
plot(dendrograma)
?biplot
biplot(pca)
resultado <- dist(pca)
dendrograma <- hclust(resultado)
plot(dendrograma)
distancias <- dist(pca)
dendrograma <- hclust(distancias)
plot(dendrograma)
?prcomp
distancias <- dist(pca$sdev)
dendrograma <- hclust(distancias)
plot(dendrograma)
distancias <- dist(pca$rotation)
dendrograma <- hclust(distancias)
plot(dendrograma)
distancias <- dist(pca$sdev)
dendrograma <- hclust(distancias)
plot(dendrograma)
distancias <- dist(pca$x)
dendrograma <- hclust(distancias)
plot(dendrograma)
distancias <- dist(pca$sdev)
dendrograma <- hclust(distancias)
plot(dendrograma)
distancias <- dist(pca$x)
dendrograma <- hclust(distancias)
plot(dendrograma)
summary(pca)
distancias <- dist(pca$sdev)
dendrograma <- hclust(distancias)
plot(dendrograma)
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE)
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE)
summary(pca)
pca$rotation
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE,
legend.title = "Soil management")
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE,
legend.title = "Soil management")
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE,
legend.title = "Soil management")
library(factoextra)
row.names(dados) <- dados$ID
install.packages("ggplot2")
library(factoextra)
row.names(dados) <- dados$ID
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE,
legend.title = "Soil management")
install.packages("broom")
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE,
legend.title = "Soil management")
install.packages("carData")
grupos <- dados$MANEJO
fviz_pca_biplot(pca,
col.ind = grupos,
addEllipses = TRUE,
legend.title = "Soil management")
install.packages("CCA")
install.packages("MVar.pt")
install.packages("pls")
install.packages("neuralnet")
install.packages("lmtest")
install.packages("e1071")
install.packages("randomForest")
dados <- read_excel("Banco de dados_multivariada.xlsx", sheet = "Correalação Canonica")
dados
dados <- read_excel("Banco de dados_multivariada.xlsx", sheet = "Correalação Canonica")
dados
dadosCanonica <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "Correalação Canonica")
dadosCanonica
library(readxl)
dadosCanonica <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "Correalação Canonica")
dadosCanonica
X <- dadosCanonica[, 1:3]
Y <- dadosCanonica[, 4:6]
X
Y
correlacaoCanonica <- cancor(X, Y)
correlacaoCanonica
library(MVar.pt)
CCA(X, Y, sign = 0.05)
# Análise discriminante
library(MASS)
dadosAnaliseDiscriminante <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "Analise Discriminante")
dadosAnaliseDiscriminante
#modeloDiscriminante <- lda()
# Análise discriminante
library(MASS)
dadosAnaliseDiscriminante <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "Analise Discriminante")
dadosAnaliseDiscriminante
modeloDiscriminante <- lda(dadosAnaliseDiscriminante$Species ~ dadosAnaliseDiscriminante$Sepal_Length + dadosAnaliseDiscriminante$Sepal_Width + dadosAnaliseDiscriminante$Petal_Length + dadosAnaliseDiscriminante$Petal_Width)
summary(modeloDiscriminante)
# Análise discriminante
library(MASS)
dadosAnaliseDiscriminante <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "Analise Discriminante")
dadosAnaliseDiscriminante
modeloDiscriminante <- lda(dadosAnaliseDiscriminante$Species ~ dadosAnaliseDiscriminante$Sepal_Length + dadosAnaliseDiscriminante$Sepal_Width + dadosAnaliseDiscriminante$Petal_Length + dadosAnaliseDiscriminante$Petal_Width)
modeloDiscriminante
# Análise discriminante
library(MASS)
dadosAnaliseDiscriminante <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "Analise Discriminante")
modeloDiscriminante <- lda(dadosAnaliseDiscriminante$Species ~ dadosAnaliseDiscriminante$Sepal_Length + dadosAnaliseDiscriminante$Sepal_Width + dadosAnaliseDiscriminante$Petal_Length + dadosAnaliseDiscriminante$Petal_Width)
modeloDiscriminante
predicoesLDA <- predict(dadosAnaliseDiscriminante)
head(predicoesLDA$class)
table(predicoesLDA$class, dadosAnaliseDiscriminante$Species)
predicoesLDA <- predict(modeloDiscriminante)
head(predicoesLDA$class)
table(predicoesLDA$class, dadosAnaliseDiscriminante$Species)
# PLS_Partial_Least_Mean_Squares
dadosPLS <- read_excel("Banco de dados_multivariada.xlsx",
sheet = "PLS")
dadosPLS
library(pls)
modeloPLS <- plsr(dadosPLS$Volume ~ .)
summary(modeloPLS)
library(pls)
modeloPLS <- plsr(dadosPLS$Volume ~ ., validation = "CV)
summary(modeloPLS)
library(pls)
modeloPLS <- plsr(dadosPLS$Volume ~ ., validation = "CV")
summary(modeloPLS)
library(pls)
modeloPLS <- plsr(Volume ~ ., validation = "CV", data = dadosPLS)
summary(modeloPLS)
par(mfrow = c(1, 2))
ncompOneSigma <- selectNcomp(modeloPLS, method = "onesigma", plot = TRUE)
ncompPermut <- selectNcomp(modeloPLS, method = "randomization", plot = TRUE)
volumeEstimado <- predict(modeloPLS, ncomp = 2, newdata = dadosPLS[, -1])
volumeEstimado
desvios <- dadosPLS$Volume - volumeEstimado
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(desvios ~ dadosPLS$Volume)
volumeEstimado <- predict(modeloPLS, ncomp = 1, newdata = dadosPLS[, -1])
volumeEstimado
desvios <- dadosPLS$Volume - volumeEstimado
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(desvios ~ dadosPLS$Volume)
volumeEstimado <- predict(modeloPLS, ncomp = 2, newdata = dadosPLS[, -1])
volumeEstimado
desvios <- dadosPLS$Volume - volumeEstimado
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(desvios ~ dadosPLS$Volume)
plot(dadosPLS$Volume, volumeEstimado, xlab = "Dados observados", ylab = "Dados estimados")
lines(x = c(0, 1000), y = c(0, 1000), col = "red")
desvios <- dadosPLS$Volume - volumeEstimado
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(desvios ~ dadosPLS$Volume)
par(mfrow = c(1, 2))
hist(desvios)
boxplot(desvios)
RMSEP(modeloPLS)
MSEP(modeloPLS)
R2(modeloPLS)
