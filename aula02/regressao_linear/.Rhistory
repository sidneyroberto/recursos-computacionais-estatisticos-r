library(readxl)
dados <- read_excel("Dados_regressao.xlsx")
dados
boxplot(x = dados$`DAP (cm)`, y = dados$`Altura (m)`)
plot(x = dados$`DAP (cm)`, y = dados$`Altura (m)`)
plot(x = dados$`DAP (cm)`, y = dados$`Altura (m)`, type = "l")
plot(x = dados$`DAP (cm)`, y = dados$`Altura (m)`)
plot(x = dados$`DAP (cm)`, y = dados$`Altura (m)`, xlab = "DAP", ylab = "Altura")
ajuste <- lm(dados$`Altura (m)` ~ dados$`DAP (cm)`)
ajuste
summary(ajuste)
desvios <- residuals(ajuste)
desvios
desvios <- residuals(ajuste)
desvios
sum(desvios)
desvios <- residuals(ajuste)
desvios
sum(abs(desvios))
desvios <- residuals(ajuste)
desvios
sum(abs(desvios))
mean(abs(desvios))
desvios <- residuals(ajuste)
desvios
sum(desvios)
sum(desvios)
sum(desvios)
sum(desvios)
sd(desvios)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
bartlett.test(desvios ~ dados$`DAP (cm)`)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
set.seed(123) # para reprodutibilidade
n <- nrow(dados)                   # total de linhas
idx <- sample(1:n, size = 0.8 * n) # Ã­ndices para treino (80%)
treino <- dados[idx, ]
teste  <- dados[-idx, ]
ajuste <- lm(dados$`Altura (m)` ~ dados$`DAP (cm)` + I(dados$`DAP (cm)` ^ 2))
ajuste
summary(ajuste)
desvios <- residuals(ajuste)
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
ajuste <- lm(dados$`Altura (m)` ~ dados$`DAP (cm)` + I(?log))
ajuste
?log
ajuste <- lm(dados$`Altura (m)` ~ I(log(dados$`DAP (cm)`)))
ajuste
summary(ajuste)
ajuste <- lm(log(dados$`Altura (m)`) ~ log(dados$`DAP (cm)`))
ajuste
summary(ajuste)
desvios <- residuals(ajuste)
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
desvios <- exp(residuals(ajuste))
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
desvios <- exp(fitted.values(ajuste))
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
desvios <- dados$`Altura (m)` - exp(fitted.values(ajuste))
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
desvios <- dados$`Altura (m)` - exp(fitted.values(ajuste))
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
desvios <- dados$`Altura (m)` - exp(ajustes$fitted.values)
desvios
desvios <- dados$`Altura (m)` - exp(ajuste$fitted.values)
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
desvios <- dados$`Altura (m)` - exp(ajuste$fitted.values)
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
install.packages("scatterplot3d")
library(scatterplot3d)
grafico <- scatterplot3d(x = dados$`DAP (cm)`,
y = dados$`Altura (m)`,
z = dados$`Volume total (m3)`,
xlab = "DAP",
ylab = "Altura",
zlab = "Volume")
install.packages("rgl")
library(rgl)
plot3d(x = dados$`DAP (cm)`,
y = dados$`Altura (m)`,
z = dados$`Volume total (m3)`,
xlab = "DAP",
ylab = "Altura",
zlab = "Volume")
ajuste <- lm(dados$`Volume total (m3)` ~ dados$`DAP (cm)` + dados$`Altura (m)`)
ajuste
summary(ajuste)
desvios <- residuals(ajuste)
desvio
desvios <- residuals(ajuste)
desvios
desvios <- residuals(ajuste)
desvios
sum(desvios)
sd(desvios)
shapiro.test(desvios)
library(lmtest)
gqtest(ajuste)
ajuste <- lm(dados$`Volume total (m3)` ~ dados$`DAP (cm)` + dados$`Altura (m)`)
summary(ajuste)
hist(desvios)
ajuste <- lm(dados$`Volume total (m3)` ~ dados$`DAP (cm)` + dados$`Altura (m)`)
summary(ajuste)
ajuste <- lm(dados$`Volume total (m3)` ~ dados$`DAP (cm)`)
summary(ajuste)
ajuste <- lm(dados$`Volume total (m3)` ~ dados$`DAP (cm)`)
summary(ajuste)
desvios <- residuals(ajuste)
sum(desvios)
sd(desvios)
shapiro.test(desvios)
gqtest(ajuste)
cor.test(dados$`DAP (cm)`, dados$`Altura (m)`)
install.packages("Hmisc")
library(Hmisc)
rcorr(dados)
?rcorr
View(dados)
library(Hmisc)
rcorr(as.matrix(dados[, 3:6]))
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(dados[, 3:6])
install.packages("GGally")
library(GGally)
ggpairs(dados[, 3:6])
ggpairs(dados[, -2])
